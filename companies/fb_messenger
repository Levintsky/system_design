# 5/13/2008
# https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0

# 2/17/2009
# Stability and Scalability
https://www.facebook.com/notes/facebook-engineering/chat-stability-and-scalability/51412338919/

# 11/16/2010
# http://highscalability.com/blog/2010/11/16/facebooks-new-real-time-messaging-system-hbase-to-store-135.html
 The Underlying Technology of Messages: HBase. HBase beat out MySQL, Cassandra, and a few others.
 HBase: scaleout table store
  support high-rate row updates
  column based K-V store built on BigTable model
 Hive: query given to this analytical tool
  based on HDFS

# 4/12/2011
# https://www.facebook.com/notes/facebook-engineering/scaling-the-messages-application-back-end/10150148835363920/

# 2/26/2014
# http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html
 19B sold to FB
 450M active users
 50 billion msg / day (inbound + outbound)
 Hundreds of nodes
 > 8,000 cores
 Hundreds of T of RAM

# 10/9/2014
# mobile
# https://code.facebook.com/posts/820258981365363/building-mobile-first-infrastructure-for-messenger/

# WhatsAPP I
# https://www.bittiger.io/videos/ErvmMiLBCGN8CtXby/TpxCSKrGpiKwuhP32
 MySQL + NoSQL
  SQL for user table, friend table, channel
  NoSQL: Message Table
  socket connect to broadcaster

# WhatsAPP II
# https://www.bittiger.io/classpage/22DT8oTvueCxu2WER
 combine with Twitter Archetect
 push |notfication|
 pull the notification when user online

# WeChat
# https://www.bittiger.io/classpage/whjndMyYoQdCiiEgh
 Group Chat: push (500 upper limit in a group)

# Facebook IM Infra slides of 2009
http://www.ideawu.net/blog/archives/728.html

# http://blog.gainlo.co/index.php/2016/04/19/design-facebook-chat-function/
 # High level
 User A send request to B
 1. send to chat server
 2. B is online, send to B
 3. B is offline, push notification; B online, send ACK, double check mark in A's UI

 # Real-time:
 HTTP Persistent connection, GET request -> doesn't return until chat server provides anything back;
 re-established when time-out or interrupt (BOSH)

 # Online notification:
 O(avr user/friend * |peak user|)
 Solution: update every 5 min or everytime refresh 


